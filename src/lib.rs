mod app;
mod app_group;
mod app_menu;
mod organ;
mod role;
mod user;
mod view;

use crate::app::action::query_page;
use bmbp_abc::tera_add_template;
use rust_embed::RustEmbed;
use salvo::prelude::*;
use salvo::serve_static::static_embed;
use salvo::Router;

#[derive(RustEmbed)]
#[folder = "static/bmbp_rbac/"]
struct StaticAssets;

pub fn build_router() -> Router {
    let mut router = Router::new();
    router = router
        .push(Router::with_path("/static/bmbp_rbac/<**path>").get(static_embed::<StaticAssets>()))
        .push(
            Router::with_path("rbac")
                .push(
                    Router::with_path("app")
                        .push(
                            Router::with_path("group")
                                .push(Router::with_path("index.view").get(view::app_group_view))
                                .push(
                                    Router::with_path("tree.action")
                                        .post(app_group::action::query_tree),
                                )
                                .push(
                                    Router::with_path("tree/exclude.action")
                                        .post(app_group::action::query_tree_exclude_node),
                                )
                                .push(
                                    Router::with_path("page.action")
                                        .post(app_group::action::query_page),
                                )
                                .push(
                                    Router::with_path("list.action")
                                        .post(app_group::action::query_list),
                                )
                                .push(
                                    Router::with_path("info.action")
                                        .post(app_group::action::query_info),
                                )
                                .push(
                                    Router::with_path("save.action").post(app_group::action::save),
                                )
                                .push(
                                    Router::with_path("update/parent.action")
                                        .get(app_group::action::update_parent),
                                )
                                .push(
                                    Router::with_path("update.action")
                                        .post(app_group::action::update),
                                )
                                .push(
                                    Router::with_path("enable.action")
                                        .post(app_group::action::enable),
                                )
                                .push(
                                    Router::with_path("disable.action")
                                        .post(app_group::action::disable),
                                )
                                .push(
                                    Router::with_path("remove.action")
                                        .post(app_group::action::remove),
                                )
                                .push(
                                    Router::with_path("batch/enable.action")
                                        .post(app_group::action::batch_enable),
                                )
                                .push(
                                    Router::with_path("batch/disable.action")
                                        .post(app_group::action::batch_disable),
                                )
                                .push(
                                    Router::with_path("batch/remove.action")
                                        .post(app_group::action::batch_remove),
                                ),
                        )
                        .push(
                            Router::with_path("app")
                                .push(Router::with_path("index.view").get(view::app_app_view))
                                .push(
                                    Router::with_path("tree.action").post(app::action::query_tree),
                                )
                                .push(
                                    Router::with_path("tree/exclude.action")
                                        .post(app::action::query_tree_with_out),
                                )
                                .push(
                                    Router::with_path("page.action").post(app::action::query_page),
                                )
                                .push(
                                    Router::with_path("list.action").post(app::action::query_list),
                                )
                                .push(
                                    Router::with_path("info.action").post(app::action::query_info),
                                )
                                .push(Router::with_path("save.action").post(app::action::save))
                                .push(
                                    Router::with_path("update/parent.action")
                                        .get(app::action::update_parent),
                                )
                                .push(Router::with_path("update.action").post(app::action::update))
                                .push(Router::with_path("enable.action").post(app::action::enable))
                                .push(
                                    Router::with_path("disable.action").post(app::action::disable),
                                )
                                .push(Router::with_path("remove.action").post(app::action::remove))
                                .push(
                                    Router::with_path("batch/enable.action")
                                        .post(app::action::batch_enable),
                                )
                                .push(
                                    Router::with_path("batch/disable.action")
                                        .post(app::action::batch_disable),
                                )
                                .push(
                                    Router::with_path("batch/remove.action")
                                        .post(app::action::batch_remove),
                                ),
                        )
                        .push(
                            Router::with_path("menu")
                                .push(Router::with_path("index.view").get(view::app_menu_view))
                                .push(
                                    Router::with_path("tree.action")
                                        .post(app_menu::action::query_tree),
                                )
                                .push(
                                    Router::with_path("tree/exclude.action")
                                        .post(app_menu::action::query_tree_exclude_node),
                                )
                                .push(
                                    Router::with_path("page.action")
                                        .post(app_menu::action::query_page),
                                )
                                .push(
                                    Router::with_path("list.action")
                                        .post(app_menu::action::query_list),
                                )
                                .push(
                                    Router::with_path("info.action")
                                        .post(app_menu::action::query_info),
                                )
                                .push(Router::with_path("save.action").post(app_menu::action::save))
                                .push(
                                    Router::with_path("update/parent.action")
                                        .get(app_menu::action::update_parent),
                                )
                                .push(
                                    Router::with_path("update.action")
                                        .post(app_menu::action::update),
                                )
                                .push(
                                    Router::with_path("enable.action")
                                        .post(app_menu::action::enable),
                                )
                                .push(
                                    Router::with_path("disable.action")
                                        .post(app_menu::action::disable),
                                )
                                .push(
                                    Router::with_path("remove.action")
                                        .post(app_menu::action::remove),
                                )
                                .push(
                                    Router::with_path("batch/enable.action")
                                        .post(app_menu::action::batch_enable),
                                )
                                .push(
                                    Router::with_path("batch/disable.action")
                                        .post(app_menu::action::batch_disable),
                                )
                                .push(
                                    Router::with_path("batch/remove.action")
                                        .post(app_menu::action::batch_remove),
                                ),
                        ),
                )
                .push(
                    Router::with_path("organ")
                        .push(Router::with_path("index.view").get(view::organ_view))
                        .push(Router::with_path("tree.action").post(organ::action::query_tree))
                        .push(
                            Router::with_path("tree/exclude.action")
                                .post(organ::action::query_tree_exclude_node),
                        )
                        .push(Router::with_path("page.action").post(organ::action::query_page))
                        .push(Router::with_path("list.action").post(organ::action::query_list))
                        .push(Router::with_path("info.action").post(organ::action::query_info))
                        .push(Router::with_path("save.action").post(organ::action::save))
                        .push(
                            Router::with_path("update/parent.action")
                                .get(organ::action::update_parent),
                        )
                        .push(Router::with_path("update.action").post(organ::action::update))
                        .push(Router::with_path("enable.action").post(organ::action::enable))
                        .push(Router::with_path("disable.action").post(organ::action::disable))
                        .push(Router::with_path("remove.action").post(organ::action::remove))
                        .push(
                            Router::with_path("batch/enable.action")
                                .post(organ::action::batch_enable),
                        )
                        .push(
                            Router::with_path("batch/disable.action")
                                .post(organ::action::batch_disable),
                        )
                        .push(
                            Router::with_path("batch/remove.action")
                                .post(organ::action::batch_remove),
                        ),
                )
                .push(
                    Router::with_path("user")
                        .push(Router::with_path("index.view").get(view::user_view))
                        .push(Router::with_path("tree.action").post(user::action::query_tree))
                        .push(
                            Router::with_path("tree/exclude.action")
                                .post(user::action::query_tree_exclude_node),
                        )
                        .push(Router::with_path("page.action").post(user::action::query_page))
                        .push(Router::with_path("list.action").post(user::action::query_list))
                        .push(Router::with_path("info.action").post(user::action::query_info))
                        .push(Router::with_path("save.action").post(user::action::save))
                        .push(
                            Router::with_path("update/parent.action")
                                .get(user::action::update_parent),
                        )
                        .push(Router::with_path("update.action").post(user::action::update))
                        .push(Router::with_path("enable.action").post(user::action::enable))
                        .push(Router::with_path("disable.action").post(user::action::disable))
                        .push(Router::with_path("remove.action").post(user::action::remove))
                        .push(
                            Router::with_path("batch/enable.action")
                                .post(user::action::batch_enable),
                        )
                        .push(
                            Router::with_path("batch/disable.action")
                                .post(user::action::batch_disable),
                        )
                        .push(
                            Router::with_path("batch/remove.action")
                                .post(user::action::batch_remove),
                        ),
                )
                .push(
                    Router::with_path("role")
                        .push(Router::with_path("index.view").get(view::role_view))
                        .push(Router::with_path("tree.action").post(role::action::query_tree))
                        .push(
                            Router::with_path("tree/exclude.action")
                                .post(role::action::query_tree_exclude_node),
                        )
                        .push(Router::with_path("page.action").post(role::action::query_page))
                        .push(Router::with_path("list.action").post(role::action::query_list))
                        .push(Router::with_path("info.action").post(role::action::query_info))
                        .push(Router::with_path("save.action").post(role::action::save))
                        .push(
                            Router::with_path("update/parent.action")
                                .get(role::action::update_parent),
                        )
                        .push(Router::with_path("update.action").post(role::action::update))
                        .push(Router::with_path("enable.action").post(role::action::enable))
                        .push(Router::with_path("disable.action").post(role::action::disable))
                        .push(Router::with_path("remove.action").post(role::action::remove))
                        .push(
                            Router::with_path("batch/enable.action")
                                .post(role::action::batch_enable),
                        )
                        .push(
                            Router::with_path("batch/disable.action")
                                .post(role::action::batch_disable),
                        )
                        .push(
                            Router::with_path("batch/remove.action")
                                .post(role::action::batch_remove),
                        ),
                ),
        );
    router
}

#[derive(RustEmbed)]
#[folder = "web/templates"]
#[prefix = "bmbp_rbac/"]
pub(crate) struct PageAssets;
pub fn build_template() {
    for file_path in PageAssets::iter() {
        tera_add_template(file_path.as_ref(), PageAssets::get(file_path.as_ref()));
    }
}
